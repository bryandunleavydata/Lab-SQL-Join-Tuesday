use sakila;
#1: List the number of films per category.
SELECT c.name, COUNT(fc.film_id) AS film_count
FROM category c
JOIN film_category fc ON c.category_id = fc.category_id
GROUP BY c.name;

#2: Retrieve the store ID, city, and country for each store.
SELECT store.store_id, city.city, country.country 
FROM store
JOIN address ON store.address_id = address.address_id
JOIN city ON address.city_id = city.city_id
JOIN country ON city.country_id = country.country_id;
#3: Calculate the total revenue generated by each store in dollars.
SELECT store.store_id,sum(payment.amount) AS revenue
FROM store
JOIN staff ON store.store_id = staff.store_id
JOIN payment ON payment.staff_id = staff.staff_id
GROUP BY staff.store_id;
#4:Determine the average running time of films for each category.
SELECT c.name AS category_name, AVG(f.length) AS running_time
FROM film_category fc
JOIN film f ON fc.film_id = f.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name;
#5:Identify the film categories with the longest average running time.
SELECT c.name AS category_name, AVG(f.length) AS running_time
FROM film_category fc
JOIN film f ON fc.film_id = f.film_id
JOIN category c ON fc.category_id = c.category_id
GROUP BY c.name 
ORDER BY running_time DESC;
#6:Display the top 10 most frequently rented movies in descending order.
SELECT film.title, COUNT(rental.rental_id) AS rental_count
FROM film
JOIN inventory ON film.film_id = inventory.film_id
JOIN rental ON rental.inventory_id = inventory.inventory_id
GROUP BY film.title
ORDER BY rental_count DESC
LIMIT 10;
#7: Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT film.title, inventory.store_id
FROM film 
JOIN inventory ON film.film_id = inventory.store_id;